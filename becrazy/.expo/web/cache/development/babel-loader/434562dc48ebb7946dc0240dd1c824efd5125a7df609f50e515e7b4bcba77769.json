{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Text } from \"../../components/Themed\";\nimport { Button } from \"../../components/auth/Button\";\nimport { TextInput } from \"../../components/auth/TextInput\";\nimport Logo from \"../../components/Logo\";\nimport { emailValidator } from \"../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\nimport { passwordConfirmValidator } from \"../../helpers/passwordConfirmValidator\";\nimport styles from \"../../components/auth/StyleSheetForm\";\nimport { server } from \"../../constants/Server\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    passwordConfirm = _useState8[0],\n    setPasswordConfirm = _useState8[1];\n  var onRegisterPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var emailError = emailValidator(email.value);\n      var passwordError = passwordValidator(password.value);\n      var passwordConfirmError = passwordConfirmValidator(password.value, passwordConfirm.value);\n      if (emailError || passwordError || passwordConfirmError) {\n        setEmail(_objectSpread(_objectSpread({}, email), {}, {\n          error: emailError\n        }));\n        setPassword(_objectSpread(_objectSpread({}, password), {}, {\n          error: passwordError\n        }));\n        setPasswordConfirm(_objectSpread(_objectSpread({}, passwordConfirm), {}, {\n          error: passwordConfirmError\n        }));\n        return;\n      }\n      var res = yield fetch(server + \"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username.value,\n          email: email.value,\n          password: password.value\n        })\n      });\n      if (res.status === 200) {\n        navigation.replace(\"LoginScreen\");\n      } else {\n        alert(res.status);\n      }\n    });\n    return function onRegisterPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\",\n      children: [_jsx(Logo, {}), _jsx(Text, {\n        style: styles.title,\n        children: \"Register\"\n      }), _jsx(TextInput, {\n        returnKeyType: \"next\",\n        placeholder: \"Username\",\n        value: username.value,\n        onChangeText: function onChangeText(text) {\n          return setUsername({\n            value: text,\n            error: \"\"\n          });\n        },\n        autoCapitalize: \"none\"\n      }), _jsx(TextInput, {\n        returnKeyType: \"next\",\n        placeholder: \"Email\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: \"\"\n          });\n        },\n        autoCapitalize: \"none\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        returnKeyType: \"next\",\n        placeholder: \"Password\",\n        value: password.value,\n        onChangeText: function onChangeText(text) {\n          return setPassword({\n            value: text,\n            error: \"\"\n          });\n        },\n        secureTextEntry: true\n      }), _jsx(TextInput, {\n        returnKeyType: \"done\",\n        placeholder: \"Confirm Password\",\n        value: passwordConfirm.value,\n        onChangeText: function onChangeText(text) {\n          return setPasswordConfirm({\n            value: text,\n            error: \"\"\n          });\n        },\n        secureTextEntry: true\n      }), _jsx(Text, {\n        style: styles.error,\n        children: email.error || password.error || passwordConfirm.error\n      }), _jsx(Button, {\n        onPress: onRegisterPressed,\n        children: \"Register\"\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(Text, {\n          children: \"Already have an account? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.replace(\"LoginScreen\");\n          },\n          children: _jsx(Text, {\n            style: styles.link,\n            children: \"Login\"\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Keyboard","TouchableWithoutFeedback","KeyboardAvoidingView","Text","Button","TextInput","Logo","emailValidator","passwordValidator","passwordConfirmValidator","styles","server","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","passwordConfirm","setPasswordConfirm","onRegisterPressed","_ref2","_asyncToGenerator","emailError","passwordError","passwordConfirmError","_objectSpread","res","fetch","method","headers","body","JSON","stringify","status","replace","alert","apply","arguments","onPress","dismiss","accessible","children","style","container","behavior","title","returnKeyType","placeholder","onChangeText","text","autoCapitalize","textContentType","keyboardType","secureTextEntry","row","link"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/screens/auth/Register.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, TouchableOpacity, Keyboard, TouchableWithoutFeedback, KeyboardAvoidingView } from \"react-native\";\r\nimport { Text } from \"../../components/Themed\";\r\nimport { Button } from \"../../components/auth/Button\";\r\nimport { TextInput } from \"../../components/auth/TextInput\";\r\nimport Logo from \"../../components/Logo\";\r\nimport { emailValidator } from \"../../helpers/emailValidator\";\r\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\r\nimport { passwordConfirmValidator } from \"../../helpers/passwordConfirmValidator\";\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport styles from \"../../components/auth/StyleSheetForm\";\r\nimport RegisterUser from \"../../interfaces/auth/RegisterUser\";\r\nimport { server } from \"../../constants/Server\";\r\n\r\n\r\nexport default function RegisterScreen({ navigation }: RootStackScreenProps<\"RegisterScreen\">) {\r\n\t// set the initial state of the form\r\n\tconst [username, setUsername] = useState({ value: \"\", error: \"\" });\r\n\tconst [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n\tconst [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n\tconst [passwordConfirm, setPasswordConfirm] = useState({ value: \"\", error: \"\" });\r\n\r\n\r\n\t// create a function to handle the register button press\r\n\t// it will validate the email and password and then register the user if there are no errors\r\n\t// then navigate to the home page\r\n\tconst onRegisterPressed = async () => {\r\n\t\tconst emailError = emailValidator(email.value);\r\n\t\tconst passwordError = passwordValidator(password.value);\r\n\t\tconst passwordConfirmError = passwordConfirmValidator(password.value, passwordConfirm.value);\r\n\t\tif (emailError || passwordError || passwordConfirmError) {\r\n\t\t\tsetEmail({ ...email, error: emailError });\r\n\t\t\tsetPassword({ ...password, error: passwordError });\r\n\t\t\tsetPasswordConfirm({ ...passwordConfirm, error: passwordConfirmError });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst res = await fetch(`${server}/signup`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: username.value,\r\n\t\t\t\temail: email.value,\r\n\t\t\t\tpassword: password.value\r\n\t\t\t} as RegisterUser)\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tnavigation.replace(\"LoginScreen\");\r\n\t\t} else {\r\n\t\t\talert(res.status);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n\t\t\t<KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<Text style={styles.title}>Register</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\treturnKeyType=\"next\"\r\n\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\tvalue={username.value}\r\n\t\t\t\t\tonChangeText={(text: string) => setUsername({ value: text, error: \"\" })}\r\n\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\treturnKeyType=\"next\"\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\tonChangeText={(text: string) => setEmail({ value: text, error: \"\" })}\r\n\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t\ttextContentType=\"emailAddress\"\r\n\t\t\t\t\tkeyboardType=\"email-address\"\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\treturnKeyType=\"next\"\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\tonChangeText={(text: string) => setPassword({ value: text, error: \"\" })}\r\n\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\treturnKeyType=\"done\"\r\n\t\t\t\t\tplaceholder='Confirm Password'\r\n\t\t\t\t\tvalue={passwordConfirm.value}\r\n\t\t\t\t\tonChangeText={(text: string) => setPasswordConfirm({ value: text, error: \"\" })}\r\n\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t/>\r\n\t\t\t\t<Text style={styles.error}>{email.error || password.error || passwordConfirm.error}</Text>\r\n\t\t\t\t<Button onPress={onRegisterPressed}>\r\n                    Register\r\n\t\t\t\t</Button>\r\n\t\t\t\t<View style={styles.row}>\r\n\t\t\t\t\t<Text>Already have an account? </Text>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => navigation.replace(\"LoginScreen\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.link}>Login</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</KeyboardAvoidingView>\r\n\t\t</TouchableWithoutFeedback>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}