{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ChangeBioModal = function ChangeBioModal(_ref) {\n  var props = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  return _jsx(Modal, _objectSpread(_objectSpread({\n    animationType: \"slide\",\n    transparent: true\n  }, props), {}, {\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.topRightButton,\n          onPress: props.onClose,\n          children: _jsx(Text, {\n            style: styles.textStyleClose,\n            children: \"X\"\n          })\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: \"Change Bio\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter new bio\",\n          onChangeText: props.onChangeText,\n          maxLength: 25,\n          value: props.value\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: props.onPress,\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"Change\"\n          })\n        })]\n      })\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  textStyleClose: {\n    color: 'red',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  input: {\n    backgroundColor: '#E9E9EF',\n    borderRadius: 10,\n    height: 48,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: '#E9E9EF',\n    overflow: 'hidden',\n    width: '100%',\n    paddingHorizontal: 16,\n    margin: 12\n  },\n  topRightButton: {\n    position: 'absolute',\n    top: 2,\n    right: 2,\n    padding: 10\n  }\n});","map":{"version":3,"names":["ChangeBioModal","_ref","props","Object","assign","_objectDestructuringEmpty","_jsx","Modal","_objectSpread","animationType","transparent","children","View","style","styles","centeredView","_jsxs","modalView","TouchableOpacity","topRightButton","onPress","onClose","Text","textStyleClose","modalText","TextInput","input","placeholder","onChangeText","maxLength","value","button","textStyle","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom","fontSize","borderWidth","borderColor","overflow","paddingHorizontal","position","top","right"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/components/profile/ChangeBioModal.tsx"],"sourcesContent":["import { View, Modal, Text, StyleSheet, TouchableOpacity, TextInput } from 'react-native';\n\nexport const ChangeBioModal = ({ ...props }) => {\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            {...props}\n        >\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                    <TouchableOpacity\n                        style={styles.topRightButton}\n                        onPress={props.onClose}\n                    >\n                        <Text style={styles.textStyleClose}>X</Text>\n                    </TouchableOpacity>\n\n                    <Text style={styles.modalText}>Change Bio</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Enter new bio\"\n                        onChangeText={props.onChangeText}\n                        maxLength={25}\n                        value={props.value}\n                    />\n                    <TouchableOpacity\n                        style={styles.button}\n                        onPress={props.onPress}\n                    >\n                        <Text style={styles.textStyle}>Change</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2,\n        backgroundColor: '#2196F3',\n    },\n    textStyle: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    textStyleClose: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 20,\n    },\n    input: {\n        backgroundColor: '#E9E9EF',\n        borderRadius: 10,\n        height: 48,\n        marginBottom: 16,\n        borderWidth: 1,\n        borderColor: '#E9E9EF',\n        overflow: 'hidden',\n        width: '100%',\n        paddingHorizontal: 16,\n        margin: 12,\n    },\n    topRightButton: {\n        position: 'absolute',\n        top: 2,\n        right: 2,\n        padding: 10,\n    },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}