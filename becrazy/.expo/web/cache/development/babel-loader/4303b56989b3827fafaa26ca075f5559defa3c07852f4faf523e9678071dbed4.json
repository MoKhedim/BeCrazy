{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"../Themed\";\nimport { server } from \"../../constants/Server\";\nimport { ResizeMode, Video } from \"expo-av\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PostsGrid = function PostsGrid(_ref) {\n  var props = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  var userPosts = props.userPosts;\n  return _jsx(View, {\n    style: styles.columns,\n    children: userPosts.map(function (post, index) {\n      return _jsxs(View, {\n        style: styles.column,\n        children: [_jsx(Video, {\n          source: {\n            uri: server + \"/getMedia/\" + post.videoId\n          },\n          volume: 1.0,\n          isMuted: true,\n          resizeMode: ResizeMode.CONTAIN,\n          shouldPlay: false,\n          style: styles.image\n        }), _jsxs(Text, {\n          style: styles.likes,\n          children: [\"\\u2665 \", post.nbLikes]\n        })]\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  columns: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  column: {\n    width: \"33%\",\n    padding: 5\n  },\n  image: {\n    width: \"100%\",\n    height: 175\n  },\n  likes: {\n    position: \"absolute\",\n    bottom: 10,\n    right: 10,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","Text","server","ResizeMode","Video","jsx","_jsx","jsxs","_jsxs","PostsGrid","_ref","props","Object","assign","_objectDestructuringEmpty","userPosts","style","styles","columns","children","map","post","index","column","source","uri","videoId","volume","isMuted","resizeMode","CONTAIN","shouldPlay","image","likes","nbLikes","create","flexDirection","flexWrap","width","padding","height","position","bottom","right","color","fontWeight","textShadowColor","textShadowOffset","textShadowRadius"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/components/profile/PostsGrid.tsx"],"sourcesContent":["import React, { View, StyleSheet } from \"react-native\";\r\nimport { Text } from \"../Themed\";\r\nimport Post from \"../../interfaces/Post\";\r\nimport { server } from \"../../constants/Server\";\r\nimport { ResizeMode, Video } from \"expo-av\";\r\n\r\nexport const PostsGrid = ({ ...props }) => {\r\n\tconst userPosts: Array<Post> = props.userPosts;\r\n\r\n\treturn (\r\n\t\t<View style={styles.columns}>\r\n\t\t\t{userPosts.map((post, index) => (\r\n\t\t\t\t<View key={index} style={styles.column}>\r\n\t\t\t\t\t<Video\r\n\t\t\t\t\t\tsource={{ uri: `${server}/getMedia/${post.videoId}` }}\r\n\t\t\t\t\t\tvolume={1.0}\r\n\t\t\t\t\t\tisMuted={true}\r\n\t\t\t\t\t\tresizeMode={ResizeMode.CONTAIN}\r\n\t\t\t\t\t\tshouldPlay={false}\r\n\t\t\t\t\t\tstyle={styles.image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Text style={styles.likes}>â™¥ {post.nbLikes}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t))}\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcolumns: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexWrap: \"wrap\",\r\n\t},\r\n\tcolumn: {\r\n\t\twidth: \"33%\",\r\n\t\tpadding: 5,\r\n\t},\r\n\timage: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 175,\r\n\t},\r\n\tlikes: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 10,\r\n\t\tright: 10,\r\n\t\tcolor: \"#fff\",\r\n\t\tfontWeight: \"bold\",\r\n\t\ttextShadowColor: \"rgba(0, 0, 0, 0.75)\",\r\n\t\ttextShadowOffset: { width: -1, height: 1 },\r\n\t\ttextShadowRadius: 10,\r\n\t},\r\n});"],"mappings":";OAAOA,KAAK;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AACZ,SAASC,IAAI;AAEb,SAASC,MAAM;AACf,SAASC,UAAU,EAAEC,KAAK,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAqB;EAAA,IAAZC,KAAK,GAAAC,MAAA,CAAAC,MAAA,MAAAC,yBAAA,CAAAJ,IAAA,GAAAA,IAAA;EACnC,IAAMK,SAAsB,GAAGJ,KAAK,CAACI,SAAS;EAE9C,OACCT,IAAA,CAACP,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,EAC1BJ,SAAS,CAACK,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OAC1Bd,KAAA,CAACT,IAAI;QAAaiB,KAAK,EAAEC,MAAM,CAACM,MAAO;QAAAJ,QAAA,GACtCb,IAAA,CAACF,KAAK;UACLoB,MAAM,EAAE;YAAEC,GAAG,EAAKvB,MAAM,kBAAamB,IAAI,CAACK;UAAU,CAAE;UACtDC,MAAM,EAAE,GAAI;UACZC,OAAO,EAAE,IAAK;UACdC,UAAU,EAAE1B,UAAU,CAAC2B,OAAQ;UAC/BC,UAAU,EAAE,KAAM;UAClBf,KAAK,EAAEC,MAAM,CAACe;QAAM,EACnB,EACFxB,KAAA,CAACP,IAAI;UAACe,KAAK,EAAEC,MAAM,CAACgB,KAAM;UAAAd,QAAA,GAAC,SAAE,EAACE,IAAI,CAACa,OAAO;QAAA,EAAQ;MAAA,GATxCZ,KAAK,CAUT;IAAA,CACP;EAAC,EACI;AAET,CAAC;AAED,IAAML,MAAM,GAAGjB,UAAU,CAACmC,MAAM,CAAC;EAChCjB,OAAO,EAAE;IACRkB,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE;EACX,CAAC;EACDd,MAAM,EAAE;IACPe,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE;EACV,CAAC;EACDP,KAAK,EAAE;IACNM,KAAK,EAAE,MAAM;IACbE,MAAM,EAAE;EACT,CAAC;EACDP,KAAK,EAAE;IACNQ,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,MAAM;IAClBC,eAAe,EAAE,qBAAqB;IACtCC,gBAAgB,EAAE;MAAET,KAAK,EAAE,CAAC,CAAC;MAAEE,MAAM,EAAE;IAAE,CAAC;IAC1CQ,gBAAgB,EAAE;EACnB;AACD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}