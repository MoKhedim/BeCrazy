{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ChangePasswordModal = function ChangePasswordModal(_ref) {\n  var props = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    passwordConfirm = _useState2[0],\n    setPasswordConfirm = _useState2[1];\n  return _jsx(Modal, _objectSpread(_objectSpread({\n    animationType: \"slide\",\n    transparent: true\n  }, props), {}, {\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.topRightButton,\n          onPress: props.onClose,\n          children: _jsx(Text, {\n            style: styles.textStyleClose,\n            children: \"X\"\n          })\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: \"Change Password\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter code\",\n          onChangeText: props.onChangeCode,\n          maxLength: 25,\n          value: props.code\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter new password\",\n          onChangeText: props.onChangePassword,\n          maxLength: 25,\n          value: props.password\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Confirm new password\",\n          onChangeText: function onChangeText(text) {\n            return setPasswordConfirm(text);\n          },\n          maxLength: 25,\n          value: passwordConfirm\n        }), _jsx(Text, {\n          style: styles.error,\n          children: props.error\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: props.onPress,\n          disabled: props.password !== passwordConfirm || props.password.length < 1,\n          children: _jsx(Text, {\n            style: props.password !== passwordConfirm || props.password.length < 1 ? styles.textStyleDisabled : styles.textStyle,\n            children: \"Change\"\n          })\n        })]\n      })\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  input: {\n    backgroundColor: '#E9E9EF',\n    borderRadius: 10,\n    height: 48,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: '#E9E9EF',\n    overflow: 'hidden',\n    width: '100%',\n    paddingHorizontal: 16,\n    margin: 12\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  textStyleDisabled: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    opacity: 0.5\n  },\n  error: {\n    color: 'red',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  topRightButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10\n  },\n  textStyleClose: {\n    color: 'red',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["useState","View","Modal","Text","StyleSheet","TouchableOpacity","TextInput","jsx","_jsx","jsxs","_jsxs","ChangePasswordModal","_ref","props","Object","assign","_objectDestructuringEmpty","_useState","_useState2","_slicedToArray","passwordConfirm","setPasswordConfirm","_objectSpread","animationType","transparent","children","style","styles","centeredView","modalView","topRightButton","onPress","onClose","textStyleClose","modalText","input","placeholder","onChangeText","onChangeCode","maxLength","value","code","onChangePassword","password","text","error","button","disabled","length","textStyleDisabled","textStyle","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginBottom","textAlign","fontWeight","fontSize","borderWidth","borderColor","overflow","paddingHorizontal","color","opacity","position","top","right"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/components/auth/ChangePasswordModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { View, Modal, Text, StyleSheet, TouchableOpacity, TextInput } from 'react-native';\n\nexport const ChangePasswordModal = ({ ...props }) => {\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            {...props}\n        >\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n\n                    <TouchableOpacity\n                        style={styles.topRightButton}\n                        onPress={props.onClose}\n                    >\n                        <Text style={styles.textStyleClose}>X</Text>\n                    </TouchableOpacity>\n\n                    <Text style={styles.modalText}>Change Password</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Enter code\"\n                        onChangeText={props.onChangeCode}\n                        maxLength={25}\n                        value={props.code}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Enter new password\"\n                        onChangeText={props.onChangePassword}\n                        maxLength={25}\n                        value={props.password}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Confirm new password\"\n                        onChangeText={(text: string) => setPasswordConfirm(text)}\n                        maxLength={25}\n                        value={passwordConfirm}\n                    />\n                    <Text style={styles.error}>\n                        {props.error}\n                    </Text>\n                    <TouchableOpacity\n                        style={styles.button}\n                        onPress={props.onPress}\n                        disabled={props.password !== passwordConfirm || props.password.length < 1}\n                    >\n                        <Text\n                            style={\n                                props.password !== passwordConfirm || props.password.length < 1 ?\n                                    styles.textStyleDisabled : styles.textStyle}\n                        >\n                            Change\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 20,\n    },\n    input: {\n        backgroundColor: '#E9E9EF',\n        borderRadius: 10,\n        height: 48,\n        marginBottom: 16,\n        borderWidth: 1,\n        borderColor: '#E9E9EF',\n        overflow: 'hidden',\n        width: '100%',\n        paddingHorizontal: 16,\n        margin: 12,\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2,\n        backgroundColor: '#2196F3',\n    },\n    textStyle: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    textStyleDisabled: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        opacity: 0.5,\n    },\n    error: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    topRightButton: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n    },\n    textStyleClose: {\n        color: 'red',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}