{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"../Themed\";\nimport { server } from \"../../constants/Server\";\nimport { ResizeMode, Video } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PostsGrid = function PostsGrid(_ref) {\n  var props = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  var userPosts = props.userPosts;\n  return _jsx(View, {\n    style: styles.columns,\n    children: userPosts.map(function (post, index) {\n      return _jsx(View, {\n        style: styles.column,\n        children: _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return console.log('navigation.navigate(\"PostScreen\")');\n          },\n          children: [_jsx(Video, {\n            source: {\n              uri: server + \"/getMedia/\" + post.videoId\n            },\n            volume: 1.0,\n            isMuted: true,\n            resizeMode: ResizeMode.CONTAIN,\n            shouldPlay: false,\n            style: styles.image\n          }), _jsxs(Text, {\n            style: styles.likes,\n            children: [\"\\u2665 \", post.nbLikes]\n          })]\n        })\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  columns: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  column: {\n    width: \"33%\",\n    padding: 5\n  },\n  image: {\n    width: \"100%\",\n    height: 175\n  },\n  likes: {\n    position: \"absolute\",\n    bottom: 10,\n    right: 10,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"names":["Text","server","ResizeMode","Video","jsx","_jsx","jsxs","_jsxs","PostsGrid","_ref","props","Object","assign","_objectDestructuringEmpty","userPosts","View","style","styles","columns","children","map","post","index","column","TouchableOpacity","onPress","console","log","source","uri","videoId","volume","isMuted","resizeMode","CONTAIN","shouldPlay","image","likes","nbLikes","StyleSheet","create","flexDirection","flexWrap","width","padding","height","position","bottom","right","color","fontWeight","textShadowColor","textShadowOffset","textShadowRadius"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/components/profile/PostsGrid.tsx"],"sourcesContent":["import { View, TouchableOpacity, StyleSheet } from 'react-native';\nimport { Text } from '../Themed';\nimport Post from '../../interfaces/Post';\nimport { server } from '../../constants/Server';\nimport { ResizeMode, Video } from 'expo-av';\n\nexport const PostsGrid = ({ ...props }) => {\n    const userPosts: Array<Post> = props.userPosts;\n\n    return (\n        <View style={styles.columns}>\n            {userPosts.map((post, index) => (\n                <View key={index} style={styles.column}>\n                    <TouchableOpacity onPress={() => console.log('navigation.navigate(\"PostScreen\")')}>\n                        <Video\n                            source={{ uri: `${server}/getMedia/${post.videoId}` }}\n                            volume={1.0}\n                            isMuted={true}\n                            resizeMode={ResizeMode.CONTAIN}\n                            shouldPlay={false}\n                            style={styles.image}\n                        />\n                        <Text style={styles.likes}>â™¥ {post.nbLikes}</Text>\n                    </TouchableOpacity>\n                </View>\n            ))}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    columns: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n    },\n    column: {\n        width: \"33%\",\n        padding: 5,\n    },\n    image: {\n        width: \"100%\",\n        height: 175,\n    },\n    likes: {\n        position: \"absolute\",\n        bottom: 10,\n        right: 10,\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n        textShadowOffset: { width: -1, height: 1 },\n        textShadowRadius: 10,\n    },\n});"],"mappings":";;;;AACA,SAASA,IAAI;AAEb,SAASC,MAAM;AACf,SAASC,UAAU,EAAEC,KAAK,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAqB;EAAA,IAAZC,KAAK,GAAAC,MAAA,CAAAC,MAAA,MAAAC,yBAAA,CAAAJ,IAAA,GAAAA,IAAA;EAChC,IAAMK,SAAsB,GAAGJ,KAAK,CAACI,SAAS;EAE9C,OACIT,IAAA,CAACU,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,EACvBL,SAAS,CAACM,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACvBjB,IAAA,CAACU,IAAI;QAAaC,KAAK,EAAEC,MAAM,CAACM,MAAO;QAAAJ,QAAA,EACnCZ,KAAA,CAACiB,gBAAgB;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAAA,CAAC;UAAAR,QAAA,GAC9Ed,IAAA,CAACF,KAAK;YACFyB,MAAM,EAAE;cAAEC,GAAG,EAAK5B,MAAM,kBAAaoB,IAAI,CAACS;YAAU,CAAE;YACtDC,MAAM,EAAE,GAAI;YACZC,OAAO,EAAE,IAAK;YACdC,UAAU,EAAE/B,UAAU,CAACgC,OAAQ;YAC/BC,UAAU,EAAE,KAAM;YAClBnB,KAAK,EAAEC,MAAM,CAACmB;UAAM,EACtB,EACF7B,KAAA,CAACP,IAAI;YAACgB,KAAK,EAAEC,MAAM,CAACoB,KAAM;YAAAlB,QAAA,GAAC,SAAE,EAACE,IAAI,CAACiB,OAAO;UAAA,EAAQ;QAAA;MACnC,GAXZhB,KAAK,CAYT;IAAA,CACV;EAAC,EACC;AAEf,CAAC;AAED,IAAML,MAAM,GAAGsB,UAAU,CAACC,MAAM,CAAC;EAC7BtB,OAAO,EAAE;IACLuB,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE;EACd,CAAC;EACDnB,MAAM,EAAE;IACJoB,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE;EACb,CAAC;EACDR,KAAK,EAAE;IACHO,KAAK,EAAE,MAAM;IACbE,MAAM,EAAE;EACZ,CAAC;EACDR,KAAK,EAAE;IACHS,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,MAAM;IAClBC,eAAe,EAAE,qBAAqB;IACtCC,gBAAgB,EAAE;MAAET,KAAK,EAAE,CAAC,CAAC;MAAEE,MAAM,EAAE;IAAE,CAAC;IAC1CQ,gBAAgB,EAAE;EACtB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}