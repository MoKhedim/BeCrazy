{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useContext, useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Text } from \"../../components/Themed\";\nimport { Button } from \"../../components/auth/Button\";\nimport { TextInput } from \"../../components/auth/TextInput\";\nimport Logo from \"../../components/Logo\";\nimport { emailValidator } from \"../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\nimport { MyContext } from \"../../App\";\nimport styles from \"../../components/auth/StyleSheetForm\";\nimport { server } from \"../../constants/Server\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useContext = useContext(MyContext),\n    token = _useContext.token,\n    setToken = _useContext.setToken;\n  if (token) navigation.replace(\"Root\");\n  var onLoginPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var emailError = emailValidator(email.value);\n      var passwordError = passwordValidator(password.value);\n      if (emailError || passwordError) {\n        setEmail(_objectSpread(_objectSpread({}, email), {}, {\n          error: emailError\n        }));\n        setPassword(_objectSpread(_objectSpread({}, password), {}, {\n          error: passwordError\n        }));\n        return;\n      }\n      var res = yield fetch(server + \"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email.value,\n          password: password.value\n        })\n      });\n      if (res.status === 200) {\n        var data = yield res.json();\n        setToken(data.token);\n        navigation.replace(\"Root\");\n      } else {\n        alert(res.status);\n      }\n    });\n    return function onLoginPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\",\n      children: [_jsx(Logo, {}), _jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        returnKeyType: \"next\",\n        placeholder: \"Email\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: \"\"\n          });\n        },\n        autoCapitalize: \"none\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        returnKeyType: \"done\",\n        placeholder: \"Password\",\n        value: password.value,\n        onChangeText: function onChangeText(text) {\n          return setPassword({\n            value: text,\n            error: \"\"\n          });\n        },\n        secureTextEntry: true\n      }), _jsx(Text, {\n        style: styles.error,\n        children: email.error || password.error\n      }), _jsx(View, {\n        style: styles.forgotPassword,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"ResetPasswordScreen\");\n          },\n          children: _jsx(Text, {\n            style: styles.forgot,\n            children: \"Forgot your password?\"\n          })\n        })\n      }), _jsx(Button, {\n        onPress: onLoginPressed,\n        children: \"Login\"\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(Text, {\n          children: \"Don't have an account? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.replace(\"RegisterScreen\");\n          },\n          children: _jsx(Text, {\n            style: styles.link,\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useContext","useState","TouchableOpacity","View","KeyboardAvoidingView","TouchableWithoutFeedback","Keyboard","Text","Button","TextInput","Logo","emailValidator","passwordValidator","MyContext","styles","server","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useContext","token","setToken","replace","onLoginPressed","_ref2","_asyncToGenerator","emailError","passwordError","_objectSpread","res","fetch","method","headers","body","JSON","stringify","status","data","json","alert","apply","arguments","onPress","dismiss","accessible","children","style","container","behavior","title","returnKeyType","placeholder","onChangeText","text","autoCapitalize","textContentType","keyboardType","secureTextEntry","forgotPassword","navigate","forgot","row","link"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/screens/auth/Login.tsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { TouchableOpacity, View, KeyboardAvoidingView, TouchableWithoutFeedback, Keyboard } from \"react-native\";\r\nimport { Text } from \"../../components/Themed\";\r\nimport { Button } from \"../../components/auth/Button\";\r\nimport { TextInput } from \"../../components/auth/TextInput\";\r\nimport Logo from \"../../components/Logo\";\r\nimport { emailValidator } from \"../../helpers/emailValidator\";\r\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { MyContext } from \"../../App\";\r\nimport styles from \"../../components/auth/StyleSheetForm\";\r\nimport LoginUser from \"../../interfaces/auth/LoginUser\";\r\nimport { server } from \"../../constants/Server\";\r\n\r\nexport default function LoginScreen({ navigation }: RootStackScreenProps<\"LoginScreen\">) {\r\n\t// create state variables for email and password\r\n\tconst [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n\tconst [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n\tconst { token, setToken } = useContext(MyContext);\r\n\tif (token) navigation.replace(\"Root\");\r\n\r\n\t// create a function to handle the login button press\r\n\t// it will validate the email and password and then log the user in if there are no errors\r\n\t// if there are errors, it will set the error state variables to display the error messages\r\n\tconst onLoginPressed = async () => {\r\n\t\tconst emailError = emailValidator(email.value);\r\n\t\tconst passwordError = passwordValidator(password.value);\r\n\t\tif (emailError || passwordError) {\r\n\t\t\tsetEmail({ ...email, error: emailError });\r\n\t\t\tsetPassword({ ...password, error: passwordError });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst res = await fetch(`${server}/login`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: email.value,\r\n\t\t\t\tpassword: password.value\r\n\t\t\t} as LoginUser)\r\n\t\t});\r\n\t\tif (res.status === 200) {\r\n\t\t\tconst data = await res.json();\r\n\t\t\tsetToken(data.token);\r\n\t\t\tnavigation.replace(\"Root\");\r\n\t\t} else {\r\n\t\t\talert(res.status);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n\t\t\t<KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<Text style={styles.title}>Login</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\treturnKeyType=\"next\"\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\tonChangeText={(text: string) => setEmail({ value: text, error: \"\" })}\r\n\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t\ttextContentType=\"emailAddress\"\r\n\t\t\t\t\tkeyboardType=\"email-address\"\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\treturnKeyType=\"done\"\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\tonChangeText={(text: string) => setPassword({ value: text, error: \"\" })}\r\n\t\t\t\t\tsecureTextEntry\r\n\t\t\t\t/>\r\n\t\t\t\t{/**Show the error of either email or password */}\r\n\t\t\t\t<Text style={styles.error}>{email.error || password.error}</Text>\r\n\t\t\t\t<View style={styles.forgotPassword}>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => navigation.navigate(\"ResetPasswordScreen\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.forgot}>Forgot your password?</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t\t<Button onPress={onLoginPressed}>\r\n                    Login\r\n\t\t\t\t</Button>\r\n\t\t\t\t<View style={styles.row}>\r\n\t\t\t\t\t<Text>Don&apos;t have an account? </Text>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => navigation.replace(\"RegisterScreen\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.link}>Register</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</KeyboardAvoidingView >\r\n\t\t</TouchableWithoutFeedback>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}