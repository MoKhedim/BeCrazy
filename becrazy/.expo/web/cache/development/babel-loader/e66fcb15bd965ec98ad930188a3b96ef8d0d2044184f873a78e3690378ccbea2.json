{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport { Entypo } from '@expo/vector-icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { Text, View } from \"../components/Themed\";\nimport { server } from \"../constants/Server\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DiscoverScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchString = _useState2[0],\n    setSearchString = _useState2[1];\n  var _useState3 = useState(Array),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    canEdit = _useState6[0],\n    setCanEdit = _useState6[1];\n  function fetchResults() {\n    return _fetchResults.apply(this, arguments);\n  }\n  function _fetchResults() {\n    _fetchResults = _asyncToGenerator(function* () {\n      var res = yield fetch(server + \"/searchUser/\" + searchString, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var data = yield res.json();\n      setSearchResults(data);\n      console.log(searchResults);\n    });\n    return _fetchResults.apply(this, arguments);\n  }\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      fetchResults();\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.alignCenter,\n      children: [_jsxs(View, {\n        style: styles.searchSection,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Username\",\n          value: searchString,\n          editable: canEdit,\n          selectTextOnFocus: canEdit,\n          onChangeText: function onChangeText(text) {\n            return setSearchString(text);\n          },\n          onKeyPress: function onKeyPress(e) {\n            return handleKeyPress(e);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.searchIcon,\n          onPress: function onPress() {\n            return console.log('search');\n          },\n          children: _jsx(Entypo, {\n            style: styles.searchIcon,\n            name: canEdit ? \"magnifying-glass\" : \"back-in-time\",\n            size: 20,\n            onPress: fetchResults\n          })\n        })]\n      }), _jsx(View, {\n        style: [styles.separator, {\n          \"backgroundColor\": useColorScheme() === \"light\" ? \"black\" : \"white\"\n        }]\n      }), searchResults.length > 0 && _jsx(View, {\n        style: [styles.listContainer],\n        children: searchResults.map(function (result) {\n          return _jsx(View, {\n            style: styles.list,\n            children: _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: [_jsx(Image, {\n                style: {\n                  width: 50,\n                  height: 50,\n                  borderRadius: 25\n                },\n                source: {\n                  uri: result.profilePicture\n                }\n              }), _jsx(Text, {\n                onPress: function onPress() {\n                  return navigation.navigate('ProfileScreen', {\n                    username: result.username\n                  });\n                },\n                style: {\n                  marginLeft: 10\n                },\n                children: result.username\n              }), _jsx(Text, {\n                style: {\n                  marginLeft: 20\n                },\n                children: result.nbFollowers + \" followers\"\n              })]\n            })\n          }, result.username);\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20\n  },\n  alignCenter: {\n    alignItems: 'center'\n  },\n  searchSection: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    width: '90%',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#000',\n    borderWidth: 1\n  },\n  searchIcon: {\n    paddingEnd: 10\n  },\n  input: {\n    flex: 1,\n    backgroundColor: '#fff',\n    color: '#424242',\n    borderRadius: 20,\n    height: 37,\n    borderColor: '#E9E9EF',\n    overflow: 'hidden',\n    paddingHorizontal: 16\n  },\n  list: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginVertical: 10\n  },\n  listContainer: {\n    width: '90%',\n    alignItems: 'center',\n    padding: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  columns: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  column: {\n    width: \"33%\",\n    padding: 5\n  },\n  image: {\n    width: \"100%\",\n    height: 175\n  },\n  likes: {\n    position: \"absolute\",\n    bottom: 10,\n    right: 10,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"names":["useState","Entypo","StyleSheet","TextInput","Image","TouchableOpacity","useColorScheme","Text","View","server","jsx","_jsx","jsxs","_jsxs","DiscoverScreen","_ref","navigation","_useState","_useState2","_slicedToArray","searchString","setSearchString","_useState3","Array","_useState4","searchResults","setSearchResults","_useState5","_useState6","canEdit","setCanEdit","fetchResults","_fetchResults","apply","arguments","_asyncToGenerator","res","fetch","method","headers","data","json","console","log","handleKeyPress","e","key","style","styles","container","children","alignCenter","searchSection","input","placeholder","value","editable","selectTextOnFocus","onChangeText","text","onKeyPress","searchIcon","onPress","name","size","separator","length","listContainer","map","result","list","flexDirection","alignItems","width","height","borderRadius","source","uri","profilePicture","navigate","username","marginLeft","nbFollowers","create","flex","marginTop","justifyContent","backgroundColor","borderColor","borderWidth","paddingEnd","color","overflow","paddingHorizontal","marginVertical","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","columns","flexWrap","column","image","likes","position","bottom","right","fontWeight","textShadowColor","textShadowOffset","textShadowRadius"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/screens/DiscoverScreen.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Entypo } from '@expo/vector-icons';\nimport { StyleSheet, TextInput, Image, TouchableOpacity, useColorScheme } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\nimport { server } from '../constants/Server';\nimport UserInfoFull from '../interfaces/media/UserInfoFull';\n\n\nexport default function DiscoverScreen({ navigation }: RootTabScreenProps<'Discover'>) {\n  const [searchString, setSearchString] = useState('')\n  const [searchResults, setSearchResults] = useState(Array<UserInfoFull>)\n\n\n  // state to determine if the user can reserach to prevent spamming\n  const [canEdit, setCanEdit] = useState(true)\n\n  async function fetchResults() {\n    const res = await fetch(`${server}/searchUser/${searchString}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    });\n    const data = await res.json();\n    setSearchResults(data)\n    console.log(searchResults)\n  }\n\n  // when the search string changes, fetch the results\n  /*\n    const search = async () => {\n      if (searchString.length > 0) {\n        setCanEdit(false)\n        const res = await fetch(`${server}/searchUser/${searchString}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            search: searchString\n          })\n        });\n        const data = await res.json();\n        setSearchResults(data)\n        setCanEdit(true)\n      }\n    }\n  */\n\n  const handleKeyPress = (e: any) => {\n    if (e.key === 'Enter') {\n      fetchResults()\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.alignCenter}>\n        <View style={styles.searchSection}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Username\"\n\n            value={searchString}\n            editable={canEdit}\n            selectTextOnFocus={canEdit}\n            onChangeText={(text) => setSearchString(text)}\n            onKeyPress={(e) => handleKeyPress(e)}\n          />\n          <TouchableOpacity\n            style={styles.searchIcon}\n            onPress={() => console.log('search')}>\n            <Entypo\n              style={styles.searchIcon}\n              name={canEdit ? \"magnifying-glass\" : \"back-in-time\"}\n              size={20} onPress={fetchResults} >\n            </Entypo>\n          </TouchableOpacity>\n        </View>\n\n        <View style={[styles.separator, { \"backgroundColor\": useColorScheme() === \"light\" ? \"black\" : \"white\" }]} />\n        {searchResults.length > 0 && (\n          <View style={[styles.listContainer]}>\n            {searchResults.map((result: UserInfoFull) => {\n              return (\n                // list of users with their profile picture, username, and number of posts\n                <View key={result.username} style={styles.list}>\n                  <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <Image\n                      style={{ width: 50, height: 50, borderRadius: 25 }}\n                      source={{ uri: result.profilePicture }}\n                    />\n                    <Text onPress={() => navigation.navigate('ProfileScreen', { username: result.username })} style={{ marginLeft: 10 }}>{result.username}</Text>\n                    <Text style={{ marginLeft: 20 }}>{result.nbFollowers + \" followers\"}</Text>\n                  </View>\n                </View>\n              )\n            })}\n          </View>\n        )}\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n  },\n  alignCenter: {\n    alignItems: 'center',\n  },\n  searchSection: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    width: '90%',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  searchIcon: {\n    paddingEnd: 10,\n  },\n  input: {\n    flex: 1,\n    backgroundColor: '#fff',\n    color: '#424242',\n    borderRadius: 20,\n    height: 37,\n    borderColor: '#E9E9EF',\n    overflow: 'hidden',\n    paddingHorizontal: 16,\n  },\n  list: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginVertical: 10,\n  },\n  listContainer: {\n    width: '90%',\n    alignItems: 'center',\n    padding: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    borderRadius: 10,\n    marginTop: 10,\n  },\n\n\n\n  columns: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  column: {\n    width: \"33%\",\n    padding: 5,\n  },\n  image: {\n    width: \"100%\",\n    height: 175,\n  },\n  likes: {\n    position: \"absolute\",\n    bottom: 10,\n    right: 10,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 10,\n  },\n\n\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}