{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"../../components/Themed\";\nimport { Button } from \"../../components/auth/Button\";\nimport { TextInput } from \"../../components/auth/TextInput\";\nimport Logo from \"../../components/Logo\";\nimport { emailValidator } from \"../../helpers/emailValidator\";\nimport styles from \"../../components/auth/StyleSheetForm\";\nimport { server } from \"../../constants/Server\";\nimport { ChangePasswordModal } from \"../../components/auth/ChangePasswordModal\";\nimport { passwordValidator } from \"../../helpers/passwordValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newPassword = _useState6[0],\n    setNewPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    code = _useState8[0],\n    setCode = _useState8[1];\n  var onResetPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var emailError = emailValidator(email.value);\n      if (emailError) {\n        setEmail(_objectSpread(_objectSpread({}, email), {}, {\n          error: emailError\n        }));\n        return;\n      }\n      var res = yield fetch(server + \"/forgotpassword\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email.value\n        })\n      });\n      var data = yield res.json();\n      if (res.status === 200) {\n        setModalVisible(true);\n      } else {\n        alert(data.message);\n      }\n    });\n    return function onResetPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var modifyPassword = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var passwordError = passwordValidator(newPassword.value);\n      if (passwordError) {\n        setNewPassword(_objectSpread(_objectSpread({}, newPassword), {}, {\n          error: passwordError\n        }));\n        return;\n      }\n      var res = yield fetch(server + \"/verifCode/\" + email.value, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: code,\n          newpassword: newPassword.value\n        })\n      });\n      var data = yield res.json();\n      if (res.status === 200) {\n        setModalVisible(false);\n        navigation.replace('LoginScreen');\n      } else {\n        alert(data.message);\n      }\n    });\n    return function modifyPassword() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ChangePasswordModal, {\n      visible: modalVisible,\n      onPress: function onPress() {\n        return modifyPassword();\n      },\n      error: newPassword.error,\n      password: newPassword.value,\n      onChangePassword: function onChangePassword(text) {\n        return setNewPassword({\n          value: text,\n          error: ''\n        });\n      },\n      code: code,\n      onChangeCode: function onChangeCode(text) {\n        return setCode(text);\n      },\n      onClose: function onClose() {\n        return setModalVisible(false);\n      }\n    }), _jsx(Logo, {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Reset Password\"\n    }), _jsx(TextInput, {\n      returnKeyType: \"done\",\n      placeholder: \"Email\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      autoCapitalize: \"none\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(Text, {\n      style: styles.error,\n      children: email.error\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Show modal\"\n        })\n      })\n    }), _jsx(Button, {\n      onPress: onResetPressed,\n      children: \"Reset Password\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","Button","TextInput","Logo","emailValidator","styles","server","ChangePasswordModal","passwordValidator","jsx","_jsx","jsxs","_jsxs","ResetPasswordScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","modalVisible","setModalVisible","_useState5","_useState6","newPassword","setNewPassword","_useState7","_useState8","code","setCode","onResetPressed","_ref2","_asyncToGenerator","emailError","_objectSpread","res","fetch","method","headers","body","JSON","stringify","data","json","status","alert","message","apply","arguments","modifyPassword","_ref3","passwordError","newpassword","replace","style","container","children","visible","onPress","password","onChangePassword","text","onChangeCode","onClose","title","returnKeyType","placeholder","onChangeText","autoCapitalize","textContentType","keyboardType","forgotPassword","forgot"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/screens/auth/ResetPassword.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from '../../components/Themed'\nimport { Button } from '../../components/auth/Button'\nimport { TextInput } from '../../components/auth/TextInput'\nimport Logo from '../../components/Logo'\nimport { emailValidator } from '../../helpers/emailValidator'\nimport { RootStackScreenProps } from '../../types'\nimport styles from '../../components/auth/StyleSheetForm'\nimport { server } from '../../constants/Server'\nimport { ChangePasswordModal } from '../../components/auth/ChangePasswordModal'\nimport { passwordValidator } from '../../helpers/passwordValidator'\n\nexport default function ResetPasswordScreen({ navigation }: RootStackScreenProps<'ResetPasswordScreen'>) {\n    const [email, setEmail] = useState({ value: '', error: '' })\n    const [modalVisible, setModalVisible] = useState(false)\n\n    // the state for when the user wants to change his password\n    const [newPassword, setNewPassword] = useState({ value: '', error: '' })\n    const [code, setCode] = useState('')\n\n    // if the email is valid, send the reset password request\n    const onResetPressed = async () => {\n        const emailError = emailValidator(email.value)\n        if (emailError) {\n            setEmail({ ...email, error: emailError })\n            return\n        }\n        const res = await fetch(`${server}/forgotpassword`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: email.value\n            })\n        });\n        const data = await res.json();\n        if (res.status === 200) {\n            setModalVisible(true)\n        } else {\n            alert(data.message)\n        }\n    }\n\n    // if the new password is valid and the code too, send the reset password request\n    // and close the modal\n    // only shows after the user has requested a reset password\n    const modifyPassword = async () => {\n        const passwordError = passwordValidator(newPassword.value)\n        if (passwordError) {\n            setNewPassword({ ...newPassword, error: passwordError })\n            return\n        }\n        const res = await fetch(`${server}/verifCode/${email.value}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: code,\n                newpassword: newPassword.value\n            })\n        });\n        const data = await res.json();\n        if (res.status === 200) {\n            setModalVisible(false)\n            navigation.replace('LoginScreen')\n        } else {\n            alert(data.message)\n        }\n    }\n\n\n    return (\n        <View style={styles.container}>\n            <ChangePasswordModal\n                visible={modalVisible}\n                onPress={() => modifyPassword()}\n                error={newPassword.error}\n                password={newPassword.value}\n                onChangePassword={(text: string) => setNewPassword({ value: text, error: '' })}\n                code={code}\n                onChangeCode={(text: string) => setCode(text)}\n                onClose={() => setModalVisible(false)}\n            />\n            <Logo />\n            <Text style={styles.title}>Reset Password</Text>\n            <TextInput\n                returnKeyType=\"done\"\n                placeholder='Email'\n                value={email.value}\n                onChangeText={(text: string) => setEmail({ value: text, error: '' })}\n                autoCapitalize=\"none\"\n                textContentType=\"emailAddress\"\n                keyboardType=\"email-address\"\n            />\n            <Text style={styles.error}>{email.error}</Text>\n            <View style={styles.forgotPassword}>\n                <TouchableOpacity\n                    onPress={() => setModalVisible(true)}\n                >\n                    <Text style={styles.forgot}>Show modal</Text>\n                </TouchableOpacity>\n            </View>\n            <Button onPress={onResetPressed}>\n                Reset Password\n            </Button>\n        </View>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}