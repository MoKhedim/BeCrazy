{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"lightColor\", \"darkColor\"],\n  _excluded2 = [\"style\", \"lightColor\", \"darkColor\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react-native-web/dist/index\";\nimport DefaultText from \"react-native-web/dist/exports/Text\";\nimport DefaultView from \"react-native-web/dist/exports/View\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useThemeColor(props, colorName) {\n  var theme = useColorScheme();\n  var colorFromProps = props[theme];\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\nexport function Text(props) {\n  var style = props.style,\n    lightColor = props.lightColor,\n    darkColor = props.darkColor,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var color = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, \"text\");\n  return _jsx(DefaultText, _objectSpread({\n    style: [{\n      color: color\n    }, style]\n  }, otherProps));\n}\nexport function View(props) {\n  var style = props.style,\n    lightColor = props.lightColor,\n    darkColor = props.darkColor,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  var backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, \"background\");\n  return _jsx(DefaultView, _objectSpread({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps));\n}","map":{"version":3,"names":["React","DefaultText","DefaultView","Colors","useColorScheme","jsx","_jsx","useThemeColor","props","colorName","theme","colorFromProps","Text","style","lightColor","darkColor","otherProps","_objectWithoutProperties","_excluded","color","light","dark","_objectSpread","View","_excluded2","backgroundColor"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/components/Themed.tsx"],"sourcesContent":["/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport React, { Text as DefaultText, View as DefaultView } from \"react-native\";\r\n\r\nimport Colors from \"../constants/Colors\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport function useThemeColor(\r\n\tprops: { light?: string; dark?: string },\r\n\tcolorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n\tconst theme = useColorScheme();\r\n\tconst colorFromProps = props[theme];\r\n\r\n\tif (colorFromProps) {\r\n\t\treturn colorFromProps;\r\n\t} else {\r\n\t\treturn Colors[theme][colorName];\r\n\t}\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText[\"props\"];\r\nexport type ViewProps = ThemeProps & DefaultView[\"props\"];\r\n\r\nexport function Text(props: TextProps) {\r\n\tconst { style, lightColor, darkColor, ...otherProps } = props;\r\n\tconst color = useThemeColor({ light: lightColor, dark: darkColor }, \"text\");\r\n\r\n\treturn <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n\tconst { style, lightColor, darkColor, ...otherProps } = props;\r\n\tconst backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, \"background\");\r\n\r\n\treturn <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n"],"mappings":";;;;;;OAKOA,KAAK;AAAA,OAAAC,WAAA;AAAA,OAAAC,WAAA;AAEZ,OAAOC,MAAM;AACb,OAAOC,cAAc;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAErD,OAAO,SAASC,aAAaA,CAC5BC,KAAwC,EACxCC,SAA+D,EAC9D;EACD,IAAMC,KAAK,GAAGN,cAAc,EAAE;EAC9B,IAAMO,cAAc,GAAGH,KAAK,CAACE,KAAK,CAAC;EAEnC,IAAIC,cAAc,EAAE;IACnB,OAAOA,cAAc;EACtB,CAAC,MAAM;IACN,OAAOR,MAAM,CAACO,KAAK,CAAC,CAACD,SAAS,CAAC;EAChC;AACD;AAUA,OAAO,SAASG,IAAIA,CAACJ,KAAgB,EAAE;EACtC,IAAQK,KAAK,GAA2CL,KAAK,CAArDK,KAAK;IAAEC,UAAU,GAA+BN,KAAK,CAA9CM,UAAU;IAAEC,SAAS,GAAoBP,KAAK,CAAlCO,SAAS;IAAKC,UAAU,GAAAC,wBAAA,CAAKT,KAAK,EAAAU,SAAA;EAC7D,IAAMC,KAAK,GAAGZ,aAAa,CAAC;IAAEa,KAAK,EAAEN,UAAU;IAAEO,IAAI,EAAEN;EAAU,CAAC,EAAE,MAAM,CAAC;EAE3E,OAAOT,IAAA,CAACL,WAAW,EAAAqB,aAAA;IAACT,KAAK,EAAE,CAAC;MAAEM,KAAK,EAALA;IAAM,CAAC,EAAEN,KAAK;EAAE,GAAKG,UAAU,EAAI;AAClE;AAEA,OAAO,SAASO,IAAIA,CAACf,KAAgB,EAAE;EACtC,IAAQK,KAAK,GAA2CL,KAAK,CAArDK,KAAK;IAAEC,UAAU,GAA+BN,KAAK,CAA9CM,UAAU;IAAEC,SAAS,GAAoBP,KAAK,CAAlCO,SAAS;IAAKC,UAAU,GAAAC,wBAAA,CAAKT,KAAK,EAAAgB,UAAA;EAC7D,IAAMC,eAAe,GAAGlB,aAAa,CAAC;IAAEa,KAAK,EAAEN,UAAU;IAAEO,IAAI,EAAEN;EAAU,CAAC,EAAE,YAAY,CAAC;EAE3F,OAAOT,IAAA,CAACJ,WAAW,EAAAoB,aAAA;IAACT,KAAK,EAAE,CAAC;MAAEY,eAAe,EAAfA;IAAgB,CAAC,EAAEZ,KAAK;EAAE,GAAKG,UAAU,EAAI;AAC5E"},"metadata":{},"sourceType":"module","externalDependencies":[]}