{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useContext } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MyContext } from \"../App\";\nimport { server } from \"../constants/Server\";\nexport var useImagePicker = function useImagePicker() {\n  var _useContext = useContext(MyContext),\n    token = _useContext.token;\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!result.canceled) {\n        uploadProfilePic(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var uploadProfilePic = function () {\n    var _ref2 = _asyncToGenerator(function* (image) {\n      var res = yield fetch(server + \"/updateUser/\" + token, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          profilePicture: image\n        })\n      });\n      var data = yield res.json();\n      console.log(data);\n    });\n    return function uploadProfilePic(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return {\n    pickImage: pickImage\n  };\n};","map":{"version":3,"names":["useContext","ImagePicker","MyContext","server","useImagePicker","_useContext","token","pickImage","_ref","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","uploadProfilePic","assets","uri","apply","arguments","_ref2","image","res","fetch","method","headers","body","JSON","stringify","profilePicture","data","json","console","log","_x"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/hooks/useImagePicker.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MyContext } from '../App';\nimport { server } from '../constants/Server';\n\n\n// this is the hook responsible for using the async storage\nexport const useImagePicker = () => {\n    const { token } = useContext(MyContext);\n\n\n    // this is the function that will be called when the user wants to pick an image\n    // it open the phone's gallery and let the user pick an image\n    const pickImage = async () => {\n        // No permissions request is necessary for launching the image library\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!result.canceled) {\n            uploadProfilePic(result.assets[0].uri)\n        }\n    };\n\n    // this function will be called at the end of the pickImage function\n    // it will send the image to the server\n    const uploadProfilePic = async (image: string) => {\n        const res = await fetch(`${server}/updateUser/${token}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                profilePicture: image\n            })\n        })\n        const data = await res.json()\n        console.log(data)\n    }\n\n    return { pickImage };\n};"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,SAAS;AAClB,SAASC,MAAM;AAIf,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAChC,IAAAC,WAAA,GAAkBL,UAAU,CAACE,SAAS,CAAC;IAA/BI,KAAK,GAAAD,WAAA,CAALC,KAAK;EAKb,IAAMC,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAE1B,IAAIC,MAAM,SAAST,WAAW,CAACU,uBAAuB,CAAC;QACnDC,UAAU,EAAEX,WAAW,CAACY,gBAAgB,CAACC,MAAM;QAC/CC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACb,CAAC,CAAC;MAEF,IAAI,CAACP,MAAM,CAACQ,QAAQ,EAAE;QAClBC,gBAAgB,CAACT,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;MAC1C;IACJ,CAAC;IAAA,gBAZKd,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYd;EAID,IAAMJ,gBAAgB;IAAA,IAAAK,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,KAAa,EAAK;MAC9C,IAAMC,GAAG,SAASC,KAAK,CAAIxB,MAAM,oBAAeG,KAAK,EAAI;QACrDsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,cAAc,EAAER;QACpB,CAAC;MACL,CAAC,CAAC;MACF,IAAMS,IAAI,SAASR,GAAG,CAACS,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACrB,CAAC;IAAA,gBAZKf,gBAAgBA,CAAAmB,EAAA;MAAA,OAAAd,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYrB;EAED,OAAO;IAAEhB,SAAS,EAATA;EAAU,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}