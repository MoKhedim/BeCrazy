{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { useAsyncStorage } from \"./hooks/useAsyncStorage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var MyContext = createContext({});\nexport default function App() {\n  var _useAsyncStorage = useAsyncStorage(),\n    getItem = _useAsyncStorage.getItem,\n    addItem = _useAsyncStorage.addItem;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var getterSetter = {\n    token: token,\n    setToken: setToken\n  };\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  useEffect(function () {\n    var getToken = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var token = yield getItem(\"token\");\n        setToken(token);\n      });\n      return function getToken() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    void getToken();\n  }, []);\n  useEffect(function () {\n    if (token) void addItem(\"token\", token);\n  }, [token]);\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsx(SafeAreaProvider, {\n      children: _jsxs(MyContext.Provider, {\n        value: getterSetter,\n        children: [_jsx(Navigation, {\n          colorScheme: colorScheme\n        }), _jsx(StatusBar, {})]\n      })\n    });\n  }\n}","map":{"version":3,"names":["React","useState","createContext","useEffect","StatusBar","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","useAsyncStorage","jsx","_jsx","jsxs","_jsxs","MyContext","App","_useAsyncStorage","getItem","addItem","_useState","_useState2","_slicedToArray","token","setToken","getterSetter","isLoadingComplete","colorScheme","getToken","_ref","_asyncToGenerator","apply","arguments","children","Provider","value"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/App.tsx"],"sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\n\n\nimport { useAsyncStorage } from \"./hooks/useAsyncStorage\";\n\n\n// create the interface for the context value\ninterface IContext {\n\ttoken: string | null;\n\tsetToken: React.Dispatch<React.SetStateAction<string | null>>;\n}\nexport const MyContext = createContext({} as IContext);\n\n\nexport default function App() {\n\t// import the fucntion to use the async storage\n\tconst { getItem, addItem } = useAsyncStorage();\n\tconst [token, setToken] = useState<string | null>(null);\n\t// create a context value to pass the token to the child component\n\tconst getterSetter = { token, setToken };\n\n\tconst isLoadingComplete = useCachedResources();\n\tconst colorScheme = useColorScheme();\n\n\tuseEffect(() => {\n\t\tconst getToken = async () => {\n\t\t\tconst token = await getItem(\"token\");\n\t\t\tsetToken(token);\n\t\t};\n\t\tvoid getToken();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (token) void addItem(\"token\", token);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [token]);\n\n\n\n\tif (!isLoadingComplete) {\n\t\treturn null;\n\t} else {\n\t\treturn (\n\t\t\t<SafeAreaProvider>\n\t\t\t\t<MyContext.Provider value={getterSetter}>\n\t\t\t\t\t<Navigation colorScheme={colorScheme} />\n\t\t\t\t\t<StatusBar />\n\t\t\t\t</MyContext.Provider>\n\t\t\t</SafeAreaProvider>\n\t\t);\n\t}\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AAEjE,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AAGjB,SAASC,eAAe;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAQ1D,OAAO,IAAMC,SAAS,GAAGZ,aAAa,CAAC,CAAC,CAAC,CAAa;AAGtD,eAAe,SAASa,GAAGA,CAAA,EAAG;EAE7B,IAAAC,gBAAA,GAA6BP,eAAe,EAAE;IAAtCQ,OAAO,GAAAD,gBAAA,CAAPC,OAAO;IAAEC,OAAO,GAAAF,gBAAA,CAAPE,OAAO;EACxB,IAAAC,SAAA,GAA0BlB,QAAQ,CAAgB,IAAI,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,YAAY,GAAG;IAAEF,KAAK,EAALA,KAAK;IAAEC,QAAQ,EAARA;EAAS,CAAC;EAExC,IAAME,iBAAiB,GAAGnB,kBAAkB,EAAE;EAC9C,IAAMoB,WAAW,GAAGnB,cAAc,EAAE;EAEpCJ,SAAS,CAAC,YAAM;IACf,IAAMwB,QAAQ;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAMP,KAAK,SAASL,OAAO,CAAC,OAAO,CAAC;QACpCM,QAAQ,CAACD,KAAK,CAAC;MAChB,CAAC;MAAA,gBAHKK,QAAQA,CAAA;QAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGb;IACD,KAAKJ,QAAQ,EAAE;EAEhB,CAAC,EAAE,EAAE,CAAC;EAENxB,SAAS,CAAC,YAAM;IACf,IAAImB,KAAK,EAAE,KAAKJ,OAAO,CAAC,OAAO,EAAEI,KAAK,CAAC;EAExC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAIX,IAAI,CAACG,iBAAiB,EAAE;IACvB,OAAO,IAAI;EACZ,CAAC,MAAM;IACN,OACCd,IAAA,CAACN,gBAAgB;MAAA2B,QAAA,EAChBnB,KAAA,CAACC,SAAS,CAACmB,QAAQ;QAACC,KAAK,EAAEV,YAAa;QAAAQ,QAAA,GACvCrB,IAAA,CAACH,UAAU;UAACkB,WAAW,EAAEA;QAAY,EAAG,EACxCf,IAAA,CAACP,SAAS,KAAG;MAAA;IACO,EACH;EAErB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}