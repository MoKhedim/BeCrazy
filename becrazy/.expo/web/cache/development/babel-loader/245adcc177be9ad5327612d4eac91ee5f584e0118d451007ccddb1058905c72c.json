{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, createContext, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { useAsyncStorage } from \"./hooks/useAsyncStorage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var MyContext = createContext({});\nexport default function App() {\n  var _useAsyncStorage = useAsyncStorage(),\n    getItem = _useAsyncStorage.getItem,\n    addItem = _useAsyncStorage.addItem,\n    removeItem = _useAsyncStorage.removeItem;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var getterSetter = {\n    token: token,\n    setToken: setToken\n  };\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  useEffect(function () {\n    var getToken = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var token = yield getItem('token');\n        setToken(token);\n      });\n      return function getToken() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getToken();\n  }, []);\n  useEffect(function () {\n    if (token) addItem('token', token);\n  }, [token]);\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsx(SafeAreaProvider, {\n      children: _jsxs(MyContext.Provider, {\n        value: getterSetter,\n        children: [_jsx(Navigation, {\n          colorScheme: colorScheme\n        }), _jsx(StatusBar, {})]\n      })\n    });\n  }\n}","map":{"version":3,"names":["useState","createContext","useEffect","StatusBar","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","useAsyncStorage","jsx","_jsx","jsxs","_jsxs","MyContext","App","_useAsyncStorage","getItem","addItem","removeItem","_useState","_useState2","_slicedToArray","token","setToken","getterSetter","isLoadingComplete","colorScheme","getToken","_ref","_asyncToGenerator","apply","arguments","children","Provider","value"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/App.tsx"],"sourcesContent":["import { useState, createContext, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\n\nimport { useAsyncStorage } from \"./hooks/useAsyncStorage\";\nexport const MyContext = createContext({} as any);\n\n\nexport default function App() {\n  // import the fucntion to use the async storage\n  const { getItem, addItem, removeItem } = useAsyncStorage();\n  const [token, setToken] = useState<string | null>(null);\n  // create a context value to pass the token to the child component\n  const getterSetter = { token, setToken }\n\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  useEffect(() => {\n    const getToken = async () => {\n      const token = await getItem('token');\n      setToken(token);\n    }\n    getToken();\n  }, []);\n\n  useEffect(() => {\n    if (token) addItem('token', token)\n  }, [token]);\n\n\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <MyContext.Provider value={getterSetter}>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </MyContext.Provider>\n      </SafeAreaProvider>\n    );\n  }\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AAEjE,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AAGjB,SAASC,eAAe;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC1D,OAAO,IAAMC,SAAS,GAAGZ,aAAa,CAAC,CAAC,CAAC,CAAQ;AAGjD,eAAe,SAASa,GAAGA,CAAA,EAAG;EAE5B,IAAAC,gBAAA,GAAyCP,eAAe,EAAE;IAAlDQ,OAAO,GAAAD,gBAAA,CAAPC,OAAO;IAAEC,OAAO,GAAAF,gBAAA,CAAPE,OAAO;IAAEC,UAAU,GAAAH,gBAAA,CAAVG,UAAU;EACpC,IAAAC,SAAA,GAA0BnB,QAAQ,CAAgB,IAAI,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,YAAY,GAAG;IAAEF,KAAK,EAALA,KAAK;IAAEC,QAAQ,EAARA;EAAS,CAAC;EAExC,IAAME,iBAAiB,GAAGpB,kBAAkB,EAAE;EAC9C,IAAMqB,WAAW,GAAGpB,cAAc,EAAE;EAEpCJ,SAAS,CAAC,YAAM;IACd,IAAMyB,QAAQ;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC3B,IAAMP,KAAK,SAASN,OAAO,CAAC,OAAO,CAAC;QACpCO,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC;MAAA,gBAHKK,QAAQA,CAAA;QAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGb;IACDJ,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,YAAM;IACd,IAAIoB,KAAK,EAAEL,OAAO,CAAC,OAAO,EAAEK,KAAK,CAAC;EACpC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAIX,IAAI,CAACG,iBAAiB,EAAE;IACtB,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OACEf,IAAA,CAACN,gBAAgB;MAAA4B,QAAA,EACfpB,KAAA,CAACC,SAAS,CAACoB,QAAQ;QAACC,KAAK,EAAEV,YAAa;QAAAQ,QAAA,GACtCtB,IAAA,CAACH,UAAU;UAACmB,WAAW,EAAEA;QAAY,EAAG,EACxChB,IAAA,CAACP,SAAS,KAAG;MAAA;IACM,EACJ;EAEvB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}