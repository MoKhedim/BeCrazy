{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ProgressRing from \"./ProgressRing\";\nimport { Text } from \"../Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FillButton = function FillButton(_ref) {\n  var whenPressed = _ref.whenPressed,\n    whenReleased = _ref.whenReleased,\n    progressTimer = _ref.progressTimer;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    progress = _useState2[0],\n    setProgress = _useState2[1];\n  var timerRef = useRef(null);\n  var handlePress = function handlePress() {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    setProgress(0);\n    var startTime = new Date().getTime();\n    whenPressed();\n    timerRef.current = setInterval(function () {\n      var currentTime = new Date().getTime();\n      var elapsedTime = currentTime - startTime;\n      var newProgress = elapsedTime / progressTimer;\n      if (newProgress >= 1) {\n        clearInterval(timerRef.current);\n      }\n      setProgress(newProgress);\n    }, 1);\n  };\n  var handleRelease = function handleRelease() {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      setProgress(0);\n      whenReleased();\n    }\n  };\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 1,\n    style: styles.container,\n    onPressIn: handlePress,\n    onPressOut: handleRelease,\n    children: [_jsx(ProgressRing, {\n      strokeWidth: 10,\n      size: 125,\n      progress: progress\n    }), _jsx(Text, {\n      style: styles.text,\n      children: \"Record\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    position: 'relative'\n  },\n  text: {\n    position: 'absolute',\n    top: 50,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: 'white'\n  }\n});\nexport default FillButton;","map":{"version":3,"names":["React","useRef","useState","StyleSheet","TouchableOpacity","ProgressRing","Text","jsx","_jsx","jsxs","_jsxs","FillButton","_ref","whenPressed","whenReleased","progressTimer","_useState","_useState2","_slicedToArray","progress","setProgress","timerRef","handlePress","current","clearInterval","startTime","Date","getTime","setInterval","currentTime","elapsedTime","newProgress","handleRelease","activeOpacity","style","styles","container","onPressIn","onPressOut","children","strokeWidth","size","text","create","position","top","left","width","height","textAlign","textAlignVertical","fontWeight","fontSize","color"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/components/camera/FillButton.tsx"],"sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\nimport ProgressRing from './ProgressRing';\nimport { Text } from '../Themed';\n\n\n\ninterface FillButtonProps {\n    whenPressed: () => void;\n    whenReleased: () => void;\n    progressTimer: number;\n  }\n\n\nconst FillButton: FC<FillButtonProps> = ({whenPressed, whenReleased, progressTimer}) => {\n    const [progress, setProgress] = useState(0);\n    const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n    const handlePress = () => {\n        if (timerRef.current) {\n            clearInterval(timerRef.current);\n        }\n        setProgress(0);\n        const startTime = new Date().getTime();\n        whenPressed();\n        timerRef.current = setInterval(() => {\n            const currentTime = new Date().getTime();\n            const elapsedTime = currentTime - startTime;\n            const newProgress = elapsedTime / progressTimer;\n            if (newProgress >= 1) {\n                clearInterval(timerRef.current!);\n            }\n            setProgress(newProgress);\n        }, 1);\n    };\n\n\n    const handleRelease = () => {\n        if (timerRef.current) {\n            clearInterval(timerRef.current);\n            setProgress(0);\n            whenReleased();\n        }\n    };\n\n\n    return (\n        <TouchableOpacity activeOpacity={1} style={styles.container} onPressIn={handlePress} onPressOut={handleRelease}>\n            <ProgressRing strokeWidth={10} size={125} progress={progress} />\n            <Text style={styles.text}>Record</Text>\n        </TouchableOpacity>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        position: 'relative',\n    },\n    text: {\n        position: 'absolute',\n        top: 50,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        fontWeight: 'bold',\n        fontSize: 18,\n        color: 'white',\n    },\n});\nexport default FillButton;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAQC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAEpD,OAAOC,YAAY;AACnB,SAASC,IAAI;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAWjC,IAAMC,UAA+B,GAAG,SAAlCA,UAA+BA,CAAAC,IAAA,EAAmD;EAAA,IAA9CC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAEC,aAAa,GAAAH,IAAA,CAAbG,aAAa;EAC9E,IAAAC,SAAA,GAAgCd,QAAQ,CAAC,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAMI,QAAQ,GAAGpB,MAAM,CAAwB,IAAI,CAAC;EAEpD,IAAMqB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAID,QAAQ,CAACE,OAAO,EAAE;MAClBC,aAAa,CAACH,QAAQ,CAACE,OAAO,CAAC;IACnC;IACAH,WAAW,CAAC,CAAC,CAAC;IACd,IAAMK,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACtCd,WAAW,EAAE;IACbQ,QAAQ,CAACE,OAAO,GAAGK,WAAW,CAAC,YAAM;MACjC,IAAMC,WAAW,GAAG,IAAIH,IAAI,EAAE,CAACC,OAAO,EAAE;MACxC,IAAMG,WAAW,GAAGD,WAAW,GAAGJ,SAAS;MAC3C,IAAMM,WAAW,GAAGD,WAAW,GAAGf,aAAa;MAC/C,IAAIgB,WAAW,IAAI,CAAC,EAAE;QAClBP,aAAa,CAACH,QAAQ,CAACE,OAAO,CAAE;MACpC;MACAH,WAAW,CAACW,WAAW,CAAC;IAC5B,CAAC,EAAE,CAAC,CAAC;EACT,CAAC;EAGD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxB,IAAIX,QAAQ,CAACE,OAAO,EAAE;MAClBC,aAAa,CAACH,QAAQ,CAACE,OAAO,CAAC;MAC/BH,WAAW,CAAC,CAAC,CAAC;MACdN,YAAY,EAAE;IAClB;EACJ,CAAC;EAGD,OACIJ,KAAA,CAACN,gBAAgB;IAAC6B,aAAa,EAAE,CAAE;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAACC,SAAS,EAAEf,WAAY;IAACgB,UAAU,EAAEN,aAAc;IAAAO,QAAA,GAC3G/B,IAAA,CAACH,YAAY;MAACmC,WAAW,EAAE,EAAG;MAACC,IAAI,EAAE,GAAI;MAACtB,QAAQ,EAAEA;IAAS,EAAG,EAChEX,IAAA,CAACF,IAAI;MAAC4B,KAAK,EAAEC,MAAM,CAACO,IAAK;MAAAH,QAAA,EAAC;IAAM,EAAO;EAAA,EACxB;AAE3B,CAAC;AAED,IAAMJ,MAAM,GAAGhC,UAAU,CAACwC,MAAM,CAAC;EAC7BP,SAAS,EAAE;IACPQ,QAAQ,EAAE;EACd,CAAC;EACDF,IAAI,EAAE;IACFE,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE,QAAQ;IAC3BC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AACF,eAAe1C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}