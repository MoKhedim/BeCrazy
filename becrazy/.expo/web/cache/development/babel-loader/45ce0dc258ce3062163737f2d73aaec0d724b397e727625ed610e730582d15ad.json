{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"../../components/Themed\";\nimport styles from \"./styles/savePost\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { ResizeMode, Video } from \"expo-av\";\nimport { server } from \"../../constants/Server\";\nimport { MyContext } from \"../../App\";\nimport Colors from \"../../constants/Colors\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SavePostScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(MyContext),\n    token = _useContext.token;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    description = _useState2[0],\n    setDescription = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    requestRunning = _useState4[0],\n    setRequestRunning = _useState4[1];\n  var colorScheme = useColorScheme();\n  var handleSavePost = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setRequestRunning(true);\n      var formData = new FormData();\n      formData.append(\"description\", description);\n      formData.append(\"video\", route.params.source);\n      var response = yield fetch(server + \"/postMedia/\" + token, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        body: formData\n      });\n      if (response.status == 200) {\n        alert(\"Error uploading post\");\n        setRequestRunning(false);\n        return;\n      }\n      setRequestRunning(false);\n      navigation.replace(\"Root\");\n    });\n    return function handleSavePost() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (requestRunning) {\n    return _jsx(View, {\n      style: styles.uploadingContainer,\n      children: _jsx(ActivityIndicator, {\n        color: \"red\",\n        size: \"large\"\n      })\n    });\n  }\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\",\n      children: [_jsx(Video, {\n        style: styles.mediaPreview,\n        source: {\n          uri: route.params.source\n        },\n        rate: 1.0,\n        volume: 1.0,\n        isMuted: true,\n        resizeMode: ResizeMode.COVER,\n        useNativeControls: true\n      }), _jsx(TextInput, {\n        style: [styles.inputText, {\n          backgroundColor: Colors[colorScheme].textInput,\n          color: Colors[colorScheme].text\n        }],\n        maxLength: 150,\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        },\n        placeholder: \"Describe your video\"\n      }), _jsx(View, {\n        style: styles.spacer\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          style: styles.cancelButton,\n          children: [_jsx(Feather, {\n            name: \"x\",\n            size: 24,\n            color: Colors[colorScheme].text\n          }), _jsx(Text, {\n            style: [styles.cancelButtonText, {\n              color: Colors[colorScheme].text\n            }],\n            children: \"Cancel\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleSavePost();\n          },\n          style: [styles.postButton, {\n            backgroundColor: Colors[colorScheme].tint\n          }],\n          children: [_jsx(Feather, {\n            name: \"corner-left-up\",\n            size: 24,\n            color: Colors[colorScheme].background\n          }), _jsx(Text, {\n            style: [styles.postButtonText, {\n              color: Colors[colorScheme].background\n            }],\n            children: \"Post\"\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useContext","useState","ActivityIndicator","Keyboard","KeyboardAvoidingView","TextInput","TouchableOpacity","TouchableWithoutFeedback","View","Text","styles","Feather","ResizeMode","Video","server","MyContext","Colors","useColorScheme","jsx","_jsx","jsxs","_jsxs","SavePostScreen","_ref","navigation","route","_useContext","token","_useState","_useState2","_slicedToArray","description","setDescription","_useState3","_useState4","requestRunning","setRequestRunning","colorScheme","handleSavePost","_ref2","_asyncToGenerator","formData","FormData","append","params","source","response","fetch","method","headers","body","status","alert","replace","apply","arguments","style","uploadingContainer","children","color","size","onPress","dismiss","accessible","container","behavior","mediaPreview","uri","rate","volume","isMuted","resizeMode","COVER","useNativeControls","inputText","backgroundColor","textInput","text","maxLength","multiline","onChangeText","placeholder","spacer","buttonsContainer","goBack","cancelButton","name","cancelButtonText","postButton","tint","background","postButtonText"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/screens/camera/SavePostScreen.tsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { ActivityIndicator, Keyboard, KeyboardAvoidingView, TextInput, TouchableOpacity, TouchableWithoutFeedback, View } from \"react-native\";\r\nimport { Text } from \"../../components/Themed\";\r\nimport styles from \"./styles/savePost\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { RootStackScreenProps } from \"../../types\";\r\nimport { ResizeMode, Video } from \"expo-av\";\r\nimport { server } from \"../../constants/Server\";\r\nimport { MyContext } from \"../../App\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\n\r\n\r\nexport default function SavePostScreen({ navigation, route }: RootStackScreenProps<\"SavePostScreen\">) {\r\n\tconst { token } = useContext(MyContext);\r\n\tconst [description, setDescription] = useState(\"\");\r\n\tconst [requestRunning, setRequestRunning] = useState(false);\r\n\tconst colorScheme = useColorScheme();\r\n\r\n\tconst handleSavePost = async () => {\r\n\t\tsetRequestRunning(true);\r\n\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"description\", description);\r\n\t\tformData.append(\"video\", route.params.source);\r\n\r\n\t\tconst response = await fetch(`${server}/postMedia/${token}`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t    \"Content-Type\": \"multipart/form-data\",\r\n\t\t\t},\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\r\n\t\tif (response.status == 200) {\r\n\t\t\talert(\"Error uploading post\");\r\n\t\t\tsetRequestRunning(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetRequestRunning(false);\r\n\t\tnavigation.replace(\"Root\");\r\n\t};\r\n\r\n\r\n\tif (requestRunning) {\r\n\t\treturn (\r\n\t\t\t<View style={styles.uploadingContainer}>\r\n\t\t\t\t<ActivityIndicator color='red' size='large' />\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n\t\t\t<KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n\t\t\t\t<Video\r\n\t\t\t\t\tstyle={styles.mediaPreview}\r\n\t\t\t\t\tsource={{ uri: route.params.source }}\r\n\t\t\t\t\trate={1.0}\r\n\t\t\t\t\tvolume={1.0}\r\n\t\t\t\t\tisMuted={true}\r\n\t\t\t\t\tresizeMode={ResizeMode.COVER}\r\n\t\t\t\t\tuseNativeControls\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={[styles.inputText, { backgroundColor: Colors[colorScheme].textInput, color: Colors[colorScheme].text }]}\r\n\t\t\t\t\tmaxLength={150}\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tonChangeText={(text) => setDescription(text)}\r\n\t\t\t\t\tplaceholder=\"Describe your video\"\r\n\t\t\t\t/>\r\n\t\t\t\t<View style={styles.spacer} />\r\n\t\t\t\t<View style={styles.buttonsContainer}>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => navigation.goBack()}\r\n\t\t\t\t\t\tstyle={styles.cancelButton}>\r\n\t\t\t\t\t\t<Feather name=\"x\" size={24} color={Colors[colorScheme].text} />\r\n\t\t\t\t\t\t<Text style={[styles.cancelButtonText, { color: Colors[colorScheme].text }]}>Cancel</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tonPress={() => handleSavePost()}\r\n\t\t\t\t\t\tstyle={[styles.postButton, { backgroundColor: Colors[colorScheme].tint }]}>\r\n\t\t\t\t\t\t<Feather name=\"corner-left-up\" size={24} color={Colors[colorScheme].background} />\r\n\t\t\t\t\t\t<Text style={[styles.postButtonText, { color: Colors[colorScheme].background }]}>Post</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</KeyboardAvoidingView>\r\n\t\t</TouchableWithoutFeedback>\r\n\t);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}