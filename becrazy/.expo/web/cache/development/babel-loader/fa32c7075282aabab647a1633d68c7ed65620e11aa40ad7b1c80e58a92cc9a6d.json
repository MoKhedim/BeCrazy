{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var useAsyncStorage = function useAsyncStorage() {\n  var getItem = function () {\n    var _ref = _asyncToGenerator(function* (key) {\n      try {\n        var value = yield AsyncStorage.getItem(key);\n        return value;\n      } catch (e) {\n        console.log(e);\n        return null;\n      }\n    });\n    return function getItem(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var addItem = function () {\n    var _ref2 = _asyncToGenerator(function* (key, value) {\n      try {\n        yield AsyncStorage.setItem(key, value);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    return function addItem(_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var removeItem = function () {\n    var _ref3 = _asyncToGenerator(function* (key) {\n      try {\n        var value = yield AsyncStorage.removeItem(key);\n        return value;\n      } catch (e) {\n        console.log(e);\n        return null;\n      }\n    });\n    return function removeItem(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    getItem: getItem,\n    addItem: addItem,\n    removeItem: removeItem\n  };\n};","map":{"version":3,"names":["AsyncStorage","useAsyncStorage","getItem","_ref","_asyncToGenerator","key","value","e","console","log","_x","apply","arguments","addItem","_ref2","setItem","_x2","_x3","removeItem","_ref3","_x4"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/hooks/useAsyncStorage.tsx"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// this is the hook responsible for using the async storage\nexport const useAsyncStorage = () => {\n    // get the item from storage and return String or null\n    const getItem = async (key: string): Promise<string | null> => {\n        try {\n            const value = await AsyncStorage.getItem(key)\n            return value;\n        } catch (e) {\n            console.log(e);\n            return null;\n        }\n    }\n\n    // add the item to storage\n    const addItem = async (key: string, value: string) => {\n        try {\n            await AsyncStorage.setItem(key, value)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // remove the item from storage\n    const removeItem = async (key: string) => {\n        try {\n            const value = await AsyncStorage.removeItem(key)\n            return value;\n        } catch (e) {\n            console.log(e);\n            return null;\n        }\n    }\n\n    return { getItem, addItem, removeItem };\n};"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAIpE,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAEjC,IAAMC,OAAO;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,GAAW,EAA6B;MAC3D,IAAI;QACA,IAAMC,KAAK,SAASN,YAAY,CAACE,OAAO,CAACG,GAAG,CAAC;QAC7C,OAAOC,KAAK;MAChB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACd,OAAO,IAAI;MACf;IACJ,CAAC;IAAA,gBARKL,OAAOA,CAAAQ,EAAA;MAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQZ;EAGD,IAAMC,OAAO;IAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,WAAOC,GAAW,EAAEC,KAAa,EAAK;MAClD,IAAI;QACA,MAAMN,YAAY,CAACe,OAAO,CAACV,GAAG,EAAEC,KAAK,CAAC;MAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB;IACJ,CAAC;IAAA,gBANKM,OAAOA,CAAAG,GAAA,EAAAC,GAAA;MAAA,OAAAH,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMZ;EAGD,IAAMM,UAAU;IAAA,IAAAC,KAAA,GAAAf,iBAAA,CAAG,WAAOC,GAAW,EAAK;MACtC,IAAI;QACA,IAAMC,KAAK,SAASN,YAAY,CAACkB,UAAU,CAACb,GAAG,CAAC;QAChD,OAAOC,KAAK;MAChB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACd,OAAO,IAAI;MACf;IACJ,CAAC;IAAA,gBARKW,UAAUA,CAAAE,GAAA;MAAA,OAAAD,KAAA,CAAAR,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQf;EAED,OAAO;IAAEV,OAAO,EAAPA,OAAO;IAAEW,OAAO,EAAPA,OAAO;IAAEK,UAAU,EAAVA;EAAW,CAAC;AAC3C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}