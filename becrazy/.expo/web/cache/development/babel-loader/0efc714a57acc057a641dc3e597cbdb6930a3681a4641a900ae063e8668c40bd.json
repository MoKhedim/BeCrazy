{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useContext } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MyContext } from \"../App\";\nimport { server } from \"../constants/Server\";\nexport var useImagePicker = function useImagePicker() {\n  var _useContext = useContext(MyContext),\n    token = _useContext.token;\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!result.canceled) {\n        void uploadProfilePic(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var uploadProfilePic = function () {\n    var _ref2 = _asyncToGenerator(function* (image) {\n      yield fetch(server + \"/updateUser/\" + token, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          profilePicture: image\n        })\n      });\n    });\n    return function uploadProfilePic(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return {\n    pickImage: pickImage\n  };\n};","map":{"version":3,"names":["useContext","ImagePicker","MyContext","server","useImagePicker","_useContext","token","pickImage","_ref","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","uploadProfilePic","assets","uri","apply","arguments","_ref2","image","fetch","method","headers","body","JSON","stringify","profilePicture","_x"],"sources":["/Users/mohammedkhedim/Gitclones/BeCrazy/becrazy/hooks/useImagePicker.tsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { MyContext } from \"../App\";\r\nimport { server } from \"../constants/Server\";\r\n\r\n\r\n// this is the hook responsible for using the async storage\r\nexport const useImagePicker = () => {\r\n\tconst { token } = useContext(MyContext);\r\n\r\n\r\n\t// this is the function that will be called when the user wants to pick an image\r\n\t// it open the phone's gallery and let the user pick an image\r\n\tconst pickImage = async () => {\r\n\t\t// No permissions request is necessary for launching the image library\r\n\t\tconst result = await ImagePicker.launchImageLibraryAsync({\r\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n\t\t\tallowsEditing: true,\r\n\t\t\taspect: [4, 3],\r\n\t\t\tquality: 1,\r\n\t\t});\r\n\r\n\t\tif (!result.canceled) {\r\n\t\t\tvoid uploadProfilePic(result.assets[0].uri);\r\n\t\t}\r\n\t};\r\n\r\n\t// this function will be called at the end of the pickImage function\r\n\t// it will send the image to the server\r\n\tconst uploadProfilePic = async (image: string) => {\r\n\t\tawait fetch(`${server}/updateUser/${token}`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tprofilePicture: image\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\treturn { pickImage };\r\n};"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,SAAS;AAClB,SAASC,MAAM;AAIf,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACnC,IAAAC,WAAA,GAAkBL,UAAU,CAACE,SAAS,CAAC;IAA/BI,KAAK,GAAAD,WAAA,CAALC,KAAK;EAKb,IAAMC,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAE7B,IAAMC,MAAM,SAAST,WAAW,CAACU,uBAAuB,CAAC;QACxDC,UAAU,EAAEX,WAAW,CAACY,gBAAgB,CAACC,MAAM;QAC/CC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACP,MAAM,CAACQ,QAAQ,EAAE;QACrB,KAAKC,gBAAgB,CAACT,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;MAC5C;IACD,CAAC;IAAA,gBAZKd,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYd;EAID,IAAMJ,gBAAgB;IAAA,IAAAK,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,KAAa,EAAK;MACjD,MAAMC,KAAK,CAAIvB,MAAM,oBAAeG,KAAK,EAAI;QAC5CqB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpBC,cAAc,EAAEP;QACjB,CAAC;MACF,CAAC,CAAC;IACH,CAAC;IAAA,gBAVKN,gBAAgBA,CAAAc,EAAA;MAAA,OAAAT,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUrB;EAED,OAAO;IAAEhB,SAAS,EAATA;EAAU,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}